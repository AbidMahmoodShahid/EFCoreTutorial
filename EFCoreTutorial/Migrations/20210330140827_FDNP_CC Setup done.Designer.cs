// <auto-generated />
using System;
using EFCoreTutorial;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace EFCoreTutorial.Migrations
{
    [DbContext(typeof(EFCoreTutorialContext))]
    [Migration("20210330140827_FDNP_CC Setup done")]
    partial class FDNP_CCSetupdone
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("EFCoreTutorial.Models.ModelsUsingConvention.FullyDefinedNavigationProperty.FDNP_Address_CC", b =>
                {
                    b.Property<int>("FDNP_Address_CC_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FDNP_Blogger_CCId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FDNP_Address_CC_Id");

                    b.HasIndex("FDNP_Blogger_CCId")
                        .IsUnique();

                    b.ToTable("FDNP_Address_CC");
                });

            modelBuilder.Entity("EFCoreTutorial.Models.ModelsUsingConvention.FullyDefinedNavigationProperty.FDNP_Blog_CC", b =>
                {
                    b.Property<int>("FDNP_Blog_CC_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FDNP_Process_CCId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FDNP_Blog_CC_Id");

                    b.HasIndex("FDNP_Process_CCId")
                        .IsUnique();

                    b.ToTable("FDNP_Blog_CC");
                });

            modelBuilder.Entity("EFCoreTutorial.Models.ModelsUsingConvention.FullyDefinedNavigationProperty.FDNP_Blogger_CC", b =>
                {
                    b.Property<int>("FDNP_Blogger_CC_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FDNP_Blog_CC_Id")
                        .HasColumnType("int");

                    b.Property<int?>("FDNP_Blog_CC_Id1")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FDNP_Blogger_CC_Id");

                    b.HasIndex("FDNP_Blog_CC_Id1");

                    b.ToTable("FDNP_Blogger_CC");
                });

            modelBuilder.Entity("EFCoreTutorial.Models.ModelsUsingConvention.FullyDefinedNavigationProperty.FDNP_Group_CC", b =>
                {
                    b.Property<int>("FDNP_Group_CC_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FDNP_Process_CC_Id")
                        .HasColumnType("int");

                    b.Property<int?>("FDNP_Process_CC_Id1")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FDNP_Group_CC_Id");

                    b.HasIndex("FDNP_Process_CC_Id1");

                    b.ToTable("FDNP_Group_CC");
                });

            modelBuilder.Entity("EFCoreTutorial.Models.ModelsUsingConvention.FullyDefinedNavigationProperty.FDNP_Point_CC", b =>
                {
                    b.Property<int>("FDNP_Point_CC_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FDNP_Group_CC_Id")
                        .HasColumnType("int");

                    b.Property<int?>("GroupFDNP_Group_CC_Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FDNP_Point_CC_ID");

                    b.HasIndex("GroupFDNP_Group_CC_Id");

                    b.ToTable("FDNP_Point_CC");
                });

            modelBuilder.Entity("EFCoreTutorial.Models.ModelsUsingConvention.FullyDefinedNavigationProperty.FDNP_PostTag_CC", b =>
                {
                    b.Property<int>("FDNP_Post_CCId")
                        .HasColumnType("int");

                    b.Property<int>("FDNP_Tag_CCId")
                        .HasColumnType("int");

                    b.HasKey("FDNP_Post_CCId", "FDNP_Tag_CCId");

                    b.HasIndex("FDNP_Tag_CCId");

                    b.ToTable("FDNP_PostTag_CC");
                });

            modelBuilder.Entity("EFCoreTutorial.Models.ModelsUsingConvention.FullyDefinedNavigationProperty.FDNP_Post_CC", b =>
                {
                    b.Property<int>("FDNP_Post_CC_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("FDNP_Blog_CC_Id")
                        .HasColumnType("int");

                    b.Property<int?>("FDNP_Blog_CC_Id1")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FDNP_Post_CC_Id");

                    b.HasIndex("FDNP_Blog_CC_Id1");

                    b.ToTable("FDNP_Post_CC");
                });

            modelBuilder.Entity("EFCoreTutorial.Models.ModelsUsingConvention.FullyDefinedNavigationProperty.FDNP_Process_CC", b =>
                {
                    b.Property<int>("FDNP_Process_CC_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FDNP_Process_CC_Id");

                    b.ToTable("FDNP_Process_CC");
                });

            modelBuilder.Entity("EFCoreTutorial.Models.ModelsUsingConvention.FullyDefinedNavigationProperty.FDNP_Tag_CC", b =>
                {
                    b.Property<int>("FDNP_Tag_CC_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("FDNP_Tag_CC_Id");

                    b.ToTable("FDNP_Tag_CC");
                });

            modelBuilder.Entity("EFCoreTutorial.Models.ModelsUsingConvention.NoNavigationPropertyWithFK.NNPFK_Group_CC", b =>
                {
                    b.Property<int>("NNPFK_Group_CC_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NNPFK_Group_CC_Id");

                    b.ToTable("NNPFK_Group_CC");
                });

            modelBuilder.Entity("EFCoreTutorial.Models.ModelsUsingConvention.NoNavigationPropertyWithFK.NNPFK_Point_CC", b =>
                {
                    b.Property<int>("NNPFK_Point_CC_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NNPFK_Point_CC_Id");

                    b.ToTable("NNPFK_Point_CC");
                });

            modelBuilder.Entity("EFCoreTutorial.Models.ModelsUsingConvention.NoNavigationPropertyWithFK.NNPFK_Process_CC", b =>
                {
                    b.Property<int>("NNPFK_Process_CC_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("NNPFK_Process_CC_Id");

                    b.ToTable("NNPFK_Process_CC");
                });

            modelBuilder.Entity("EFCoreTutorial.Models.ModelsUsingConvention.SingleCollectionNavigationProperty.SCNP_Group_CC", b =>
                {
                    b.Property<int>("SCNP_Group_CC_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SCNP_Process_CC_Id")
                        .HasColumnType("int");

                    b.HasKey("SCNP_Group_CC_Id");

                    b.HasIndex("SCNP_Process_CC_Id");

                    b.ToTable("SCNP_Group_CC");
                });

            modelBuilder.Entity("EFCoreTutorial.Models.ModelsUsingConvention.SingleCollectionNavigationProperty.SCNP_Point_CC", b =>
                {
                    b.Property<int>("SCNP_Point_CC_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("SCNP_Group_CC_Id")
                        .HasColumnType("int");

                    b.HasKey("SCNP_Point_CC_ID");

                    b.HasIndex("SCNP_Group_CC_Id");

                    b.ToTable("SCNP_Point_CC");
                });

            modelBuilder.Entity("EFCoreTutorial.Models.ModelsUsingConvention.SingleCollectionNavigationProperty.SCNP_Process_CC", b =>
                {
                    b.Property<int>("SCNP_Process_CC_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SCNP_Process_CC_Id");

                    b.ToTable("SCNP_Process_CC");
                });

            modelBuilder.Entity("EFCoreTutorial.Models.ModelsUsingConvention.SingleCollectionNavigationPropertyWithFK.SCNPFK_Group_CC", b =>
                {
                    b.Property<int>("SCNPFK_Group_CC_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SCNPFK_Process_CC_Id")
                        .HasColumnType("int");

                    b.Property<int?>("SCNPFK_Process_CC_Id1")
                        .HasColumnType("int");

                    b.HasKey("SCNPFK_Group_CC_Id");

                    b.HasIndex("SCNPFK_Process_CC_Id1");

                    b.ToTable("SCNPFK_Group_CC");
                });

            modelBuilder.Entity("EFCoreTutorial.Models.ModelsUsingConvention.SingleCollectionNavigationPropertyWithFK.SCNPFK_Point_CC", b =>
                {
                    b.Property<int>("SCNPFK_Point_CC_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SCNPFK_Group_CC_Id")
                        .HasColumnType("int");

                    b.Property<int?>("SCNPFK_Group_CC_Id1")
                        .HasColumnType("int");

                    b.HasKey("SCNPFK_Point_CC_ID");

                    b.HasIndex("SCNPFK_Group_CC_Id1");

                    b.ToTable("SCNPFK_Point_CC");
                });

            modelBuilder.Entity("EFCoreTutorial.Models.ModelsUsingConvention.SingleCollectionNavigationPropertyWithFK.SCNPFK_Process_CC", b =>
                {
                    b.Property<int>("SCNPFK_Process_CC_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SCNPFK_Process_CC_Id");

                    b.ToTable("SCNPFK_Process_CC");
                });

            modelBuilder.Entity("EFCoreTutorial.Models.ModelsUsingConvention.SingleReferenceNavigationProperty.SRNP_Group_CC", b =>
                {
                    b.Property<int>("SRNP_Group_CC_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProcessSRNP_Process_CC_Id")
                        .HasColumnType("int");

                    b.HasKey("SRNP_Group_CC_Id");

                    b.HasIndex("ProcessSRNP_Process_CC_Id");

                    b.ToTable("SRNP_Group_CC");
                });

            modelBuilder.Entity("EFCoreTutorial.Models.ModelsUsingConvention.SingleReferenceNavigationProperty.SRNP_Point_CC", b =>
                {
                    b.Property<int>("SRNP_Point_CC_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("GroupSRNP_Group_CC_Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SRNP_Point_CC_ID");

                    b.HasIndex("GroupSRNP_Group_CC_Id");

                    b.ToTable("SRNP_Point_CC");
                });

            modelBuilder.Entity("EFCoreTutorial.Models.ModelsUsingConvention.SingleReferenceNavigationProperty.SRNP_Process_CC", b =>
                {
                    b.Property<int>("SRNP_Process_CC_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SRNP_Process_CC_Id");

                    b.ToTable("SRNP_Process_CC");
                });

            modelBuilder.Entity("EFCoreTutorial.Models.ModelsUsingConvention.SingleReferenceNavigationPropertyWithFK.SRNPFK_Group_CC", b =>
                {
                    b.Property<int>("SRNPFK_Group_CC_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProcessSRNPFK_Process_CC_Id")
                        .HasColumnType("int");

                    b.Property<int>("SRNPFK_Process_CC_Id")
                        .HasColumnType("int");

                    b.HasKey("SRNPFK_Group_CC_Id");

                    b.HasIndex("ProcessSRNPFK_Process_CC_Id");

                    b.ToTable("SRNPFK_Group_CC");
                });

            modelBuilder.Entity("EFCoreTutorial.Models.ModelsUsingConvention.SingleReferenceNavigationPropertyWithFK.SRNPFK_Point_CC", b =>
                {
                    b.Property<int>("SRNPFK_Point_CC_ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("GroupSRNPFK_Group_CC_Id")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SRNPFK_Group_CC_Id")
                        .HasColumnType("int");

                    b.HasKey("SRNPFK_Point_CC_ID");

                    b.HasIndex("GroupSRNPFK_Group_CC_Id");

                    b.ToTable("SRNPFK_Point_CC");
                });

            modelBuilder.Entity("EFCoreTutorial.Models.ModelsUsingConvention.SingleReferenceNavigationPropertyWithFK.SRNPFK_Process_CC", b =>
                {
                    b.Property<int>("SRNPFK_Process_CC_Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("SRNPFK_Process_CC_Id");

                    b.ToTable("SRNPFK_Process_CC");
                });

            modelBuilder.Entity("EFCoreTutorial.Models.ModelsUsingConvention.FullyDefinedNavigationProperty.FDNP_Address_CC", b =>
                {
                    b.HasOne("EFCoreTutorial.Models.ModelsUsingConvention.FullyDefinedNavigationProperty.FDNP_Blogger_CC", "FDNP_Blogger_CC")
                        .WithOne("FDNP_Address_CC")
                        .HasForeignKey("EFCoreTutorial.Models.ModelsUsingConvention.FullyDefinedNavigationProperty.FDNP_Address_CC", "FDNP_Blogger_CCId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EFCoreTutorial.Models.ModelsUsingConvention.FullyDefinedNavigationProperty.FDNP_Blog_CC", b =>
                {
                    b.HasOne("EFCoreTutorial.Models.ModelsUsingConvention.FullyDefinedNavigationProperty.FDNP_Process_CC", "FDNP_Process_CC")
                        .WithOne("FDNP_Blog_CC")
                        .HasForeignKey("EFCoreTutorial.Models.ModelsUsingConvention.FullyDefinedNavigationProperty.FDNP_Blog_CC", "FDNP_Process_CCId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EFCoreTutorial.Models.ModelsUsingConvention.FullyDefinedNavigationProperty.FDNP_Blogger_CC", b =>
                {
                    b.HasOne("EFCoreTutorial.Models.ModelsUsingConvention.FullyDefinedNavigationProperty.FDNP_Blog_CC", "FDNP_Blog_CC")
                        .WithMany()
                        .HasForeignKey("FDNP_Blog_CC_Id1");
                });

            modelBuilder.Entity("EFCoreTutorial.Models.ModelsUsingConvention.FullyDefinedNavigationProperty.FDNP_Group_CC", b =>
                {
                    b.HasOne("EFCoreTutorial.Models.ModelsUsingConvention.FullyDefinedNavigationProperty.FDNP_Process_CC", "FDNP_Process_CC")
                        .WithMany("GroupList")
                        .HasForeignKey("FDNP_Process_CC_Id1");
                });

            modelBuilder.Entity("EFCoreTutorial.Models.ModelsUsingConvention.FullyDefinedNavigationProperty.FDNP_Point_CC", b =>
                {
                    b.HasOne("EFCoreTutorial.Models.ModelsUsingConvention.FullyDefinedNavigationProperty.FDNP_Group_CC", "Group")
                        .WithMany("PointList")
                        .HasForeignKey("GroupFDNP_Group_CC_Id");
                });

            modelBuilder.Entity("EFCoreTutorial.Models.ModelsUsingConvention.FullyDefinedNavigationProperty.FDNP_PostTag_CC", b =>
                {
                    b.HasOne("EFCoreTutorial.Models.ModelsUsingConvention.FullyDefinedNavigationProperty.FDNP_Post_CC", "FDNP_Post_CC")
                        .WithMany("FDNP_PostTag_CC")
                        .HasForeignKey("FDNP_Post_CCId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("EFCoreTutorial.Models.ModelsUsingConvention.FullyDefinedNavigationProperty.FDNP_Tag_CC", "FDNP_Tag_CC")
                        .WithMany("FDNP_PostTag_CC")
                        .HasForeignKey("FDNP_Tag_CCId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("EFCoreTutorial.Models.ModelsUsingConvention.FullyDefinedNavigationProperty.FDNP_Post_CC", b =>
                {
                    b.HasOne("EFCoreTutorial.Models.ModelsUsingConvention.FullyDefinedNavigationProperty.FDNP_Blog_CC", "FDNP_Blog_CC")
                        .WithMany("PostList")
                        .HasForeignKey("FDNP_Blog_CC_Id1");
                });

            modelBuilder.Entity("EFCoreTutorial.Models.ModelsUsingConvention.SingleCollectionNavigationProperty.SCNP_Group_CC", b =>
                {
                    b.HasOne("EFCoreTutorial.Models.ModelsUsingConvention.SingleCollectionNavigationProperty.SCNP_Process_CC", null)
                        .WithMany("GroupList")
                        .HasForeignKey("SCNP_Process_CC_Id");
                });

            modelBuilder.Entity("EFCoreTutorial.Models.ModelsUsingConvention.SingleCollectionNavigationProperty.SCNP_Point_CC", b =>
                {
                    b.HasOne("EFCoreTutorial.Models.ModelsUsingConvention.SingleCollectionNavigationProperty.SCNP_Group_CC", null)
                        .WithMany("Points")
                        .HasForeignKey("SCNP_Group_CC_Id");
                });

            modelBuilder.Entity("EFCoreTutorial.Models.ModelsUsingConvention.SingleCollectionNavigationPropertyWithFK.SCNPFK_Group_CC", b =>
                {
                    b.HasOne("EFCoreTutorial.Models.ModelsUsingConvention.SingleCollectionNavigationPropertyWithFK.SCNPFK_Process_CC", null)
                        .WithMany("GroupList")
                        .HasForeignKey("SCNPFK_Process_CC_Id1");
                });

            modelBuilder.Entity("EFCoreTutorial.Models.ModelsUsingConvention.SingleCollectionNavigationPropertyWithFK.SCNPFK_Point_CC", b =>
                {
                    b.HasOne("EFCoreTutorial.Models.ModelsUsingConvention.SingleCollectionNavigationPropertyWithFK.SCNPFK_Group_CC", null)
                        .WithMany("Points")
                        .HasForeignKey("SCNPFK_Group_CC_Id1");
                });

            modelBuilder.Entity("EFCoreTutorial.Models.ModelsUsingConvention.SingleReferenceNavigationProperty.SRNP_Group_CC", b =>
                {
                    b.HasOne("EFCoreTutorial.Models.ModelsUsingConvention.SingleReferenceNavigationProperty.SRNP_Process_CC", "Process")
                        .WithMany()
                        .HasForeignKey("ProcessSRNP_Process_CC_Id");
                });

            modelBuilder.Entity("EFCoreTutorial.Models.ModelsUsingConvention.SingleReferenceNavigationProperty.SRNP_Point_CC", b =>
                {
                    b.HasOne("EFCoreTutorial.Models.ModelsUsingConvention.SingleReferenceNavigationProperty.SRNP_Group_CC", "Group")
                        .WithMany()
                        .HasForeignKey("GroupSRNP_Group_CC_Id");
                });

            modelBuilder.Entity("EFCoreTutorial.Models.ModelsUsingConvention.SingleReferenceNavigationPropertyWithFK.SRNPFK_Group_CC", b =>
                {
                    b.HasOne("EFCoreTutorial.Models.ModelsUsingConvention.SingleReferenceNavigationPropertyWithFK.SRNPFK_Process_CC", "Process")
                        .WithMany()
                        .HasForeignKey("ProcessSRNPFK_Process_CC_Id");
                });

            modelBuilder.Entity("EFCoreTutorial.Models.ModelsUsingConvention.SingleReferenceNavigationPropertyWithFK.SRNPFK_Point_CC", b =>
                {
                    b.HasOne("EFCoreTutorial.Models.ModelsUsingConvention.SingleReferenceNavigationPropertyWithFK.SRNPFK_Group_CC", "Group")
                        .WithMany()
                        .HasForeignKey("GroupSRNPFK_Group_CC_Id");
                });
#pragma warning restore 612, 618
        }
    }
}
